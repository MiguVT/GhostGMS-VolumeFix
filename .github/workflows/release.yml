name: Create Release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Get version from module.prop
        id: get_version
        run: |
          if [ ! -f module.prop ]; then
            echo "Error: module.prop not found"
            exit 1
          fi
          VERSION=$(grep 'version=' module.prop | cut -d'=' -f2)
          if [ -z "$VERSION" ]; then
            echo "Error: Could not extract version from module.prop"
            exit 1
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          
      - name: Verify required files
        run: |
          REQUIRED_FILES=(
            "module.prop"
            "LICENSE"
            "README.md"
            "customize.sh"
            "service.sh"
            "gmslist.txt"
            "misc_optimizations.prop"
            "toast.apk"
            "system"
            "webroot"
            "META-INF"
          )
          
          for file in "${REQUIRED_FILES[@]}"; do
            if [ ! -e "$file" ]; then
              echo "Error: Required file/directory '$file' not found"
              exit 1
            fi
          done
          
      - name: Create zip file
        run: |
          # Create a clean directory for the zip
          mkdir -p release_temp
          
          # Copy all necessary files
          cp module.prop release_temp/
          cp LICENSE release_temp/
          cp README.md release_temp/
          cp customize.sh release_temp/
          cp service.sh release_temp/
          cp gmslist.txt release_temp/
          cp misc_optimizations.prop release_temp/
          cp toast.apk release_temp/
          
          # Copy system directory
          cp -r system release_temp/
          
          # Copy webroot directory
          cp -r webroot release_temp/
          
          # Copy META-INF directory
          cp -r META-INF release_temp/
          
          # Create the zip file
          cd release_temp
          zip -r ../GhostGMS-${{ steps.get_version.outputs.version }}.zip *
          cd ..
          
      - name: Verify zip file
        run: |
          if [ ! -f GhostGMS-${{ steps.get_version.outputs.version }}.zip ]; then
            echo "Error: Zip file was not created"
            exit 1
          fi
          
          # Check if zip file is not empty
          if [ ! -s GhostGMS-${{ steps.get_version.outputs.version }}.zip ]; then
            echo "Error: Created zip file is empty"
            exit 1
          fi
          
      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: GhostGMS-${{ steps.get_version.outputs.version }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Cleanup
        run: |
          rm -rf release_temp
          rm GhostGMS-${{ steps.get_version.outputs.version }}.zip 